includeTool << gant.tools.Execute
setDefaultTarget('package')
version = "0.9.3"
buildDir = "projectx-$version"
zipfilename = "projectx-$version"+ '.zip'


target ( package : 'Create the .zip to send to Scott' ) {
  println ( 'Creating zip' )
  delete(file: zipfilename)
  mkdir(dir: buildDir)
  execute.shell ( './generateBat.sh' )
  execute.shell ( "cp -r testweb.sh download.zip projx.groovy x lib runprojx.bat dict $buildDir" )
  //execute.shell ( "cp -r projx.groovy x lib runprojx.bat dict $buildDir" )
  execute.shell ( "zip -r $zipfilename $buildDir" )
}




//path(id:"classpath") {
//  fileset(dir:"lib")
//} 

//target ( compile : 'compile a .jar' ) {
//  taskdef ( name : 'groovyc' , classname : 'org.codehaus.groovy.ant.Groovyc' , classpathref : "classpath" )
//  groovyc ( srcdir : "x" , destdir : "x" , fork : 'false' ,
//            failonerror : 'true', includeantruntime : 'true',
//            classpathref: "classpath") {
//  }
//}

